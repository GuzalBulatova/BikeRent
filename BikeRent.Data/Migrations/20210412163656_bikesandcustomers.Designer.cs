// <auto-generated />
using System;
using BikeRent.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BikeRent.Data.Migrations
{
    [DbContext(typeof(BikeRentContext))]
    [Migration("20210412163656_bikesandcustomers")]
    partial class bikesandcustomers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BikeRent.Domain.Bicycle", b =>
                {
                    b.Property<int>("BicycleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("BicyclePrice")
                        .HasColumnType("real");

                    b.HasKey("BicycleId");

                    b.ToTable("Bicycles");

                    b.HasData(
                        new
                        {
                            BicycleId = 1,
                            BicyclePrice = 300f
                        },
                        new
                        {
                            BicycleId = 2,
                            BicyclePrice = 300f
                        },
                        new
                        {
                            BicycleId = 3,
                            BicyclePrice = 300f
                        },
                        new
                        {
                            BicycleId = 4,
                            BicyclePrice = 300f
                        },
                        new
                        {
                            BicycleId = 5,
                            BicyclePrice = 300f
                        },
                        new
                        {
                            BicycleId = 6,
                            BicyclePrice = 400f
                        },
                        new
                        {
                            BicycleId = 7,
                            BicyclePrice = 400f
                        },
                        new
                        {
                            BicycleId = 8,
                            BicyclePrice = 400f
                        },
                        new
                        {
                            BicycleId = 9,
                            BicyclePrice = 500f
                        },
                        new
                        {
                            BicycleId = 10,
                            BicyclePrice = 500f
                        });
                });

            modelBuilder.Entity("BikeRent.Domain.BicycleRental", b =>
                {
                    b.Property<int>("BicycleId")
                        .HasColumnType("int");

                    b.Property<int>("RentalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateRented")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("BicycleId", "RentalId");

                    b.HasIndex("RentalId");

                    b.ToTable("BicycleRental");
                });

            modelBuilder.Entity("BikeRent.Domain.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RentalId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "a.tornberg@fake.com",
                            FirstName = "Anna",
                            LastName = "Tornberg",
                            PhoneNumber = "0765009080",
                            RentalId = 0
                        },
                        new
                        {
                            CustomerId = 2,
                            Email = "theclint@fake.com",
                            FirstName = "Clint",
                            LastName = "Eastwood",
                            PhoneNumber = "0765432101",
                            RentalId = 0
                        },
                        new
                        {
                            CustomerId = 3,
                            Email = "p.strom@fake.com",
                            FirstName = "Peter",
                            LastName = "Ström",
                            PhoneNumber = "0765559900",
                            RentalId = 0
                        },
                        new
                        {
                            CustomerId = 4,
                            Email = "p.blomqvist@fake.com",
                            FirstName = "Pippi",
                            LastName = "Blomqvist",
                            PhoneNumber = "0767776655",
                            RentalId = 0
                        },
                        new
                        {
                            CustomerId = 5,
                            Email = "r.dunger@fake.com",
                            FirstName = "Rebecca",
                            LastName = "Dunger",
                            PhoneNumber = "0764445511",
                            RentalId = 0
                        });
                });

            modelBuilder.Entity("BikeRent.Domain.Rental", b =>
                {
                    b.Property<int>("RentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentalEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RentalStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RentalId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("BikeRent.Domain.BicycleRental", b =>
                {
                    b.HasOne("BikeRent.Domain.Bicycle", null)
                        .WithMany()
                        .HasForeignKey("BicycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BikeRent.Domain.Rental", null)
                        .WithMany()
                        .HasForeignKey("RentalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BikeRent.Domain.Rental", b =>
                {
                    b.HasOne("BikeRent.Domain.Customer", null)
                        .WithMany("Rentals")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BikeRent.Domain.Customer", b =>
                {
                    b.Navigation("Rentals");
                });
#pragma warning restore 612, 618
        }
    }
}
